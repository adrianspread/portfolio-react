{
  "projects": [
    {
      "title": "Fuity Board",
      "short_desc": "Upload pictures with fruits, filter them with google API and add comments.",
      "main_image": "/projects/fruity_board/1.png",
      "git": "https://github.com/dobrystuff77/imageboard",
      "live_page": "https://fruityboard.herokuapp.com",
      "desc": [
        {
          "title": "Fruity Board",
          "text": "In this project I've used Vue.js for the first time. Inspiration came with love for colors, taste and beautiful symmetrical patterns of fruits. Main conception was to give opportunity to share images where is at least one visible random fruit. Uploaded pictures are filtered with help of the Google API, pictures without fruits are rejected.  When uploading pictures you can add: title, author, tags and description."
        },
        {
          "title": "Frontend",
          "image": "/projects/fruity_board/1.png",
          "text": "To build a frontend I used pure HTML/CSS."
        },
        {
          "title": "Backend",
          "image": "/projects/fruity_board/4.png",
          "text": "Backend was build with PostgreSQL for database and Node.js with Express server for the rest. Uploaded pictures are sent to AWS S3, in database are stored only URLs. When the picture is rejected you can see the message."
        },

        {
          "title": "Routing",
          "image": "/projects/fruity_board/6.png",
          "text": "To navigate to different sites I'm using Hash-Routing - selected picture can be send to someone with URL."
        },
        {
          "title": "Interaction",
          "image": "/projects/fruity_board/2.png",
          "text": "Click on the picture to make it bigger and read comments. Now you can add comments using your own nick :) You can also navigate through pictures using left and right arrows and X for closing the modal."
        },
        {
          "title": "Responsiveness",
          "image": "/projects/fruity_board/responsive1.png",
          "text": "According to the rule mobile first, page is fully responsive."
        },
        {
          "image": "/projects/fruity_board/responsive2.png"
        }
      ]
    },

    {
      "title": "Spotify Search",
      "short_desc": "Search for albums or artists using Spotify API. Find your favorite artist without logging in!",
      "main_image": "/projects/spotify_search/1.png",
      "git": "https://github.com/dobrystuff77/spotify_search",
      "live_page": "https://spotifysearch1.herokuapp.com",
      "desc": [
        {
          "title": "Frontend",
          "image": "/projects/spotify_search/2.png",
          "text": "Everything was build using HTML/CSS."
        },
        {
          "title": "Features",
          "image": "/projects/spotify_search/3.png",
          "text": "For connecting with API in order to fetch the data from Spotify Api I'm using AJAX. When you scroll down to the bottom of the results page infinite scroll will fetch next data and add to to previous. Page is responsive."
        }
      ]
    },

    {
      "title": "Petition",
      "main_image": "/projects/petition/1.png",
      "short_desc": "Sign the petition to save the trees!",
      "git": "https://github.com/dobrystuff77/petition",
      "live_page": "http://finalpetition.herokuapp.com/register",
      "desc": [
        {
          "title": "Frontend",
          "text": "To build a frontend I used pure HTML/CSS."
        },
        {
          "title": "Backend",
          "text": "Backend is build with Node.js, Express.js, and PostgreSQL. Data base is created to store user informations necessary for authentication. Everything is protected from CSURF attacks and SQL injections. For rendering different HTML templates is used Handlebars.js"
        },
        {
          "title": "Features",
          "image": "/projects/petition/1.png",
          "text": "To sing the petition you need to register creating your account."
        },
        {
          "image": "/projects/petition/2.png",
          "text": "If you already have an account you can log in."
        },
        {
          "image": "/projects/petition/3.png",
          "text": "You sing the petition using virtual sign in canvas which is stored in data base as a string."
        },
        {
          "image": "/projects/petition/4.png",
          "text": "There is possibility to see all signers."
        },
        {
          "image": "/projects/petition/5.png",
          "text": "If it will be necessary you can delete your signature or change your profile informations."
        },
        {
          "image": "/projects/petition/6.png",
          "text": "Page is fully responsive."
        },
        {
          "image": "/projects/petition/7.png"
        }
      ]
    },

    {
      "title": "Connect Four",
      "main_image": "/projects/connect_four/1.png",
      "short_desc": "Game for 2 players based on the original board game. It was second project I've ever built and It was really exciting!",
      "git": "https://github.com/dobrystuff77/connect_four",
      "live_page": "http://connectfour2.herokuapp.com",
      "desc": [
        {
          "title": "Logic",
          "image": "/projects/connect_four/1.png",
          "text": "Whole logic game was built with Java Script and jQuery."
        },
        {
          "title": "Features",
          "image": "/projects/connect_four/2.png",
          "text": "Game has a counter for both players. You can reset the game. Result of the game is stored in local storage so even after closing web window and opening it again you will see result. Always in the end of the battle you can see cheesy animation where game board is destroyed."
        },
        {
          "title": "Accessibility",
          "image": "/projects/connect_four/1.png",
          "text": "You can play the game just using left/right arrow to move pointer and enter to admit chosen column."
        }
      ]
    },
    {
      "title": "Simple To do",
      "main_image": "/projects/todo/1.png",
      "git": "https://github.com/dobrystuff77/simple-todo-PERN",
      "live_page": "https://simple-todo-pern.herokuapp.com/",
      "short_desc": "To Do List - add, edit, delete.",
      "desc": [
        {
          "image": "/projects/todo/1.png",
          "text": "Very simple To Do list app made as a practice of CRUD. Technologies I've used: React.js and bootstrap for front end, and node.js, postgreSQL for back end. All you can do is add, update and delete list elements."
        }
      ]
    },
    {
      "title": "Burger Builder - ecommerce",
      "main_image": "/projects/fruity_board/fruity_board.png",
      "git": "",
      "live_page": "",
      "desc": []
    }
  ]
}
